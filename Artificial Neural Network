from keras.models import Sequential
from keras import layers
input_dim = X_train_tfidf.shape[1]  
n_features= df.shape[0]-1

model = Sequential()
model.add(layers.Dense(10, input_dim=input_dim, activation='relu'))

model.add(layers.Dense(units=int(round((n_features+1)/2)), activation='relu'))
model.add(layers.Dropout(rate=0.2))
model.add(layers.Dense(units=int(round((n_features+1)/4)), activation='relu'))
model.add(layers.Dropout(rate=0.2))

model.add(layers.Dense(1, activation='sigmoid'))

model.compile(loss='binary_crossentropy', optimizer='adam',  metrics=['accuracy'])
model.summary()

history = model.fit(X_train_tfidf.toarray(), y_train, epochs=100, verbose=False, 
                    validation_data=(X_test_tfidf.toarray(), y_test), batch_size=10)
                    
loss, accuracy = model.evaluate(X_train_tfidf.toarray(), y_train, verbose=False)
print("Training Accuracy: {:.4f}".format(accuracy))
loss, accuracy = model.evaluate(X_test_tfidf.toarray(), y_test, verbose=False)
print("Testing Accuracy:  {:.4f}".format(accuracy))                    
