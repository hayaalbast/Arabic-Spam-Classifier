from sklearn.neighbors import KNeighborsClassifier

model = KNeighborsClassifier(n_neighbors=3)

# Train the model using the training sets
model.fit(X_train_tfidf,y_train)

#Predict Output
y_pred = model.predict(X_test_tfidf)
precision = precision_score(y_test, y_pred)
recall = recall_score(y_test, y_pred)
accuracy = accuracy_score(y_test, y_pred)
print('Precision: {} / Recall: {} / Accuracy: {}'.format(round(precision, 3), round(recall, 3), round(accuracy, 3)))

# Running different values for neighbors and comparing perfomance measures
epochs= 6
acc= {}
for i in range(1,epochs):
  model = KNeighborsClassifier(n_neighbors=i)
  model.fit(X_train_tfidf,y_train)
  y_pred = model.predict(X_test_tfidf)
  precision = precision_score(y_test, y_pred)
  recall = recall_score(y_test, y_pred)
  accuracy = accuracy_score(y_test, y_pred)
  acc[i]= [['Precision', round(precision, 3)], ['Recall', round(recall, 3)], ['Accuracy:',round(accuracy, 3)]]
  
# Cross validation
  
stratifiedkf=StratifiedKFold(n_splits=5)
score=cross_val_score(model, X_train_tfidf, y_train, cv=stratifiedkf)
print("Cross Validation Scores are {}".format(score))
print("Average Cross Validation score :{}".format(score.mean()))
